//THESE ARE THE PACKAGES THAT WE HAVE JUST INSTALLED//
const express = require('express');
const bodyParser = require('body-Parser');
const mysql = require('mysql2');
const dotenv = require('dotenv');

dotenv.config();

const app = express();
app.use(bodyParser.json());

//THESE LINES ARE FOR GETTING THE DATA FROM THE DATABASE//    
const db = mysql.createConnection ({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASS,
    database: process.env.DB_NAME,
});

db.connect((err) => {
    if(err) throw err;
    console.log('Connected to MySQL');
});

app.get ('/', (req, res) => {
    res.send('Backend is working!'); //THE RESPONSE SENDS A MESSAGE TO TELL ME THAT EVERYTHING IS RUNNING SMOOTHLY//
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});

// POST STAFF
app.post('/addStaff', (req, res) => {
    const { name, email, password , gender, role } = req.body; // Assuming staff data is in request body
    const sql = "INSERT INTO Staff (name, email, password, gender, role) VALUES (?, ?, ?, ?, ?)";
    db.query(sql, [name, email, password ,gender, role], (err, result) => {
        if (err) {
            console.error('Error adding staff:', err);
            res.status(500).send('Error adding staff');
            return;
        }
        res.send('Staff member added successfully!');
    });
});

// GET STAFF
app.get ('/getStaff', (req, res) => {
    console.log('req.body:', req.body);
    db.query('SELECT * FROM Staff',(err, results) => {
        if(err) {
            console.error('Error fetching staff members:', err);
            res.status(500).send('Error fetching staff members');
            return;
        }
        res.json(results);
    });
});

//UPDATE STAFF
app.put('/updateStaff', (req,res) => {
    const { staff_id, name, email, password } = req.body;
    const query = `UPDATE Staff SET name = '${name}', email = '${email}', password = '${password}' WHERE staff_id = ${staff_id}`;
    db.query(query, (err, result) => {
        if(err) throw err;
        res.send('Staff member has been updated successfully');
    });
});

//DELETE STAFF "I used DELETE instead of POST"
app.delete('/deleteStaff', (req,res) => {
    const { staff_id } = req.body;
    const query = `DELETE FROM Staff WHERE staff_id = ${staff_id}`;
    db.query(query, (err, result) => {
        if(err) throw err;
        res.send('Staff member deleted successfully');
    });
});

//LOGIN (STAFF) - I wrote /loginStaff instead of Login only
app.post('/loginStaff', (req, res) => {
    const { email, password } = req.body;
    const query = 'SELECT * FROM Staff WHERE email = ? AND password = ?';

    db.query(query, [email, password], (err, results) => {
        if(err) {
            console.error('Error during login:', err);
            res.status(500).send('Server error');
            return;
        }

        if (results.length > 0) {
            res.send('Login successful');
        } else {
            res.status(401).send('Invalid credentials');
        }
    });
});

//SEARCH API (STAFF)
app.get('/searchStaff', (req, res) => {
    const { term } = req.query;
    const query = 'SELECT * FROM Staff WHERE name LIKE ? OR email LIKE ?';

    db.query(query, [`%${term}%`, `%${term}%`], (err, results) => {
        if(err) {
            console.error('Error during search:', err);
            res.status(500).send('Error during search');
            return;
        }

        res.json(results);
    });
});

// [] 
